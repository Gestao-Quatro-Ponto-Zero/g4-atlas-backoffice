/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/files/images/products/{id}/logo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateProductLogoImage"];
        post?: never;
        delete: operations["deleteProductLogoImage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/files/images/products/{id}/banner": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateProductBannerImage"];
        post?: never;
        delete: operations["deleteProductBannerImage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/files/images/people/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateUserImage"];
        post?: never;
        delete: operations["deleteUserImage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/files/images/organizations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateOrganizationImage"];
        post?: never;
        delete: operations["deleteOrganizationImage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/validate-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["validateToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll"];
        put?: never;
        post: operations["save"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/{userId}/roles/{roleId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findByUserIdAndRoleId"];
        put?: never;
        post: operations["addRoleToUser"];
        delete: operations["deleteByUserIdAndRoleId"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/{userId}/passwords": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["save_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users-status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_1"];
        put?: never;
        post: operations["save_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/subscriptions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["save_3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/sso/verify-login-email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["verifyLoginEmail"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/sso/validate-registration-completion-otp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["validateRegistrationCompletionOtp"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/sso/validate-initial-otp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["validateInitialOtp"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/sso/password/start": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["passwordStart"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/sso/password/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["passwordRegister"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/sso/password/recovery": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["passwordRecovery"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/sso/password/recovery-validate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["passwordRecoveryValidate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/sso/password/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["passwordLogin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/sso/initialize-auth": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["initializeAuth"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/sso/complete-registration": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["completeRegistration"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/social-medias": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_2"];
        put?: never;
        post: operations["save_4"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/segments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_3"];
        put?: never;
        post: operations["save_5"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_4"];
        put?: never;
        post: operations["save_6"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/roles/{roleId}/claims/{claimId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findByRoleIdAndClaimId"];
        put?: never;
        post: operations["addClaimToRole"];
        delete: operations["deleteByUserIdAndRoleId_1"];
        options?: never;
        head?: never;
        patch: operations["partialUpdateClaimOfRole"];
        trace?: never;
    };
    "/v1/resources": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_5"];
        put?: never;
        post: operations["save_7"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/refresh-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["refreshToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_6"];
        put?: never;
        post: operations["save_8"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products/{productId}/users/{userId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findByProductIdAndUserId"];
        put?: never;
        post: operations["saveUsersByProductId"];
        delete: operations["deleteByProductIdAndUserId"];
        options?: never;
        head?: never;
        patch: operations["partialUpdateByProductIdAndUserId"];
        trace?: never;
    };
    "/v1/products-roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_7"];
        put?: never;
        post: operations["save_9"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products-classes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_8"];
        put?: never;
        post: operations["save_10"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products-classes/{productClassId}/users/{userId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findByProductIdAndUserId_1"];
        put?: never;
        post: operations["addUserToProductClass"];
        delete: operations["deleteByProductIdAndUserId_1"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/product-formats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_9"];
        put?: never;
        post: operations["save_11"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/people": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_10"];
        put?: never;
        post: operations["save_12"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/organizations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_11"];
        put?: never;
        post: operations["save_13"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/organizations/{organizationId}/users/{userId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findByOrganizationIdAndUserId"];
        put?: never;
        post: operations["saveUsersByOrganizationId"];
        delete: operations["deleteByOrganizationIdAndUserId"];
        options?: never;
        head?: never;
        patch: operations["partialUpdateByOrganizationIdAndUserId"];
        trace?: never;
    };
    "/v1/organizations/{organizationId}/segments/{segmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findByOrganizationIdAndSegmentId"];
        put?: never;
        post: operations["addSegmentToOrganization"];
        delete: operations["deleteByOrganizationIdAndSegmentId"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/organizations-status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_12"];
        put?: never;
        post: operations["save_14"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/jobs/{jobName}/launch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["launchJob"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/jobs/{executionId}/stop": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["stopJob"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/job-titles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_13"];
        put?: never;
        post: operations["save_15"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/custom-sso/validate-magic-session": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["validateMagicSession"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/custom-sso/magic-session": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["createMagicSession"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/claims": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_14"];
        put?: never;
        post: operations["save_16"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api-keys": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_15"];
        put?: never;
        post: operations["save_17"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api-keys/{id}/regenerate-key": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["regenerateApiKey"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api-keys/{apiKeyId}/roles/{roleId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findByApiKeyIdAndRoleId"];
        put?: never;
        post: operations["addRoleToApiKey"];
        delete: operations["deleteByApiKeyIdAndRoleId"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/admin/personify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["personify"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/address": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_16"];
        put?: never;
        post: operations["save_18"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["partialUpdate"];
        trace?: never;
    };
    "/v1/users-status/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_1"];
        put?: never;
        post?: never;
        delete: operations["delete"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_1"];
        trace?: never;
    };
    "/v1/subscriptions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["partialUpdate_2"];
        trace?: never;
    };
    "/v1/social-medias/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_3"];
        put?: never;
        post?: never;
        delete: operations["delete_1"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_3"];
        trace?: never;
    };
    "/v1/segments/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_4"];
        put?: never;
        post?: never;
        delete: operations["delete_2"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_4"];
        trace?: never;
    };
    "/v1/roles/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_5"];
        put?: never;
        post?: never;
        delete: operations["delete_3"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_5"];
        trace?: never;
    };
    "/v1/resources/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_6"];
        put?: never;
        post?: never;
        delete: operations["delete_4"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_6"];
        trace?: never;
    };
    "/v1/products/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_7"];
        put?: never;
        post?: never;
        delete: operations["delete_5"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_7"];
        trace?: never;
    };
    "/v1/products-roles/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_8"];
        put?: never;
        post?: never;
        delete: operations["delete_6"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_8"];
        trace?: never;
    };
    "/v1/products-classes/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_9"];
        put?: never;
        post?: never;
        delete: operations["delete_7"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_9"];
        trace?: never;
    };
    "/v1/product-formats/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_10"];
        put?: never;
        post?: never;
        delete: operations["delete_8"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_10"];
        trace?: never;
    };
    "/v1/people/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_11"];
        put?: never;
        post?: never;
        delete: operations["delete_9"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_11"];
        trace?: never;
    };
    "/v1/organizations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_12"];
        put?: never;
        post?: never;
        delete: operations["delete_10"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_12"];
        trace?: never;
    };
    "/v1/organizations-status/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_13"];
        put?: never;
        post?: never;
        delete: operations["delete_11"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_13"];
        trace?: never;
    };
    "/v1/job-titles/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_14"];
        put?: never;
        post?: never;
        delete: operations["delete_12"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_14"];
        trace?: never;
    };
    "/v1/claims/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_15"];
        put?: never;
        post?: never;
        delete: operations["delete_13"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_15"];
        trace?: never;
    };
    "/v1/api-keys/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_16"];
        put?: never;
        post?: never;
        delete: operations["delete_14"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_16"];
        trace?: never;
    };
    "/v1/address/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_17"];
        put?: never;
        post?: never;
        delete: operations["delete_15"];
        options?: never;
        head?: never;
        patch: operations["partialUpdate_17"];
        trace?: never;
    };
    "/v1/verification-codes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_17"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/verification-codes/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_18"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/{id}/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findRolesByUserId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/{id}/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_18"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/{id}/products-classes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_19"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/{id}/organizations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_20"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users-passwords": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_21"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users-passwords/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_19"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/user-password-mails": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_22"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/user-password-mails/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_20"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/subscriptions/product/{productId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findByProductId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/subscriptions/person/{personId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findByUserId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/segments/{id}/organizations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findOrganizationsBySegmentId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/roles/{id}/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findUsersByRoleId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/roles/{id}/claims": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findClaimsByRoleId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/roles/{id}/api-keys": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findApiKeysByRoleId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products/{id}/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findUsersByProductId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products-classes/{id}/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findUsersByProductClassId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/people/{id}/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_23"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/organizations/{id}/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findUsersByOrganizationId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/organizations/{id}/segments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findSegmentsByOrganizationId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/metrics/successful-logins": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAllSuccessfulLoginMetrics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/magic-sessions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_24"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/magic-sessions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_21"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/login-attempts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_25"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/login-attempts/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById_22"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/jobs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getJobs"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAllEntities"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/{entity}/filters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findByEntity"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/claims/{id}/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findRolesByClaimId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api-keys/{id}/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findRolesByApiKeyId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api-keys-roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll_26"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actuator": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Actuator root web endpoint */
        get: operations["links"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actuator/metrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Actuator web endpoint 'metrics' */
        get: operations["listNames"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actuator/metrics/{requiredMetricName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Actuator web endpoint 'metrics-requiredMetricName' */
        get: operations["metric"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actuator/info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Actuator web endpoint 'info' */
        get: operations["info"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actuator/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Actuator web endpoint 'health' */
        get: operations["health"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actuator/caches": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Actuator web endpoint 'caches' */
        get: operations["caches"];
        put?: never;
        post?: never;
        /** Actuator web endpoint 'caches' */
        delete: operations["clearCaches"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actuator/caches/{cache}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Actuator web endpoint 'caches-cache' */
        get: operations["cache"];
        put?: never;
        post?: never;
        /** Actuator web endpoint 'caches-cache' */
        delete: operations["clearCache"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        FileImageResponse: {
            path?: string;
            type?: string;
            /** Format: int64 */
            size_in_bytes?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        ValidateTokenResponse: {
            /** Format: uuid */
            accounts_user_id?: string;
            /** Format: uuid */
            cognito_user_id?: string;
            /** Format: uuid */
            cognito_user_sub?: string;
            email?: string;
            /** Format: date-time */
            issued_at?: string;
            /** Format: date-time */
            expires_at?: string;
            roles?: string[];
            products?: string[];
        };
        UserRequest: {
            email?: string;
            name?: string;
            about?: string;
            /** Format: uuid */
            job_title_id?: string;
            /** Format: uuid */
            aws_cognito_id?: string;
            /** Format: uuid */
            person_id?: string;
            /** Format: uuid */
            status_id?: string;
            enabled?: boolean;
            visible?: boolean;
            /** Format: date-time */
            deleted_at?: string;
        };
        JobTitleResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        PersonResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            phone?: string;
            picture?: string;
            /** Format: date-time */
            deleted_at?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        UserResponse: {
            /** Format: uuid */
            id?: string;
            email?: string;
            name?: string;
            about?: string;
            visible?: boolean;
            /** Format: uuid */
            aws_cognito_id?: string;
            person?: components["schemas"]["PersonResponse"];
            status?: components["schemas"]["UserStatusResponse"];
            job_title?: components["schemas"]["JobTitleResponse"];
            enabled?: boolean;
            /** Format: date-time */
            deleted_at?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        UserStatusResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            display_name?: string;
            /** Format: date-time */
            deleted_at?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        RoleResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
            /** Format: int32 */
            count_users?: number;
            /** Format: int32 */
            count_api_keys?: number;
        };
        UserRoleResponse: {
            role?: components["schemas"]["RoleResponse"];
            user?: components["schemas"]["UserResponse"];
            /** Format: date-time */
            created_at?: string;
        };
        UserPasswordRequest: {
            password: string;
        };
        UserPasswordResponse: {
            /** Format: uuid */
            id?: string;
            user?: components["schemas"]["UserResponse"];
            current?: boolean;
            password?: string;
            /** Format: date-time */
            created_at?: string;
        };
        UserStatusRequest: {
            name?: string;
            display_name?: string;
            /** Format: date-time */
            deleted_at?: string;
        };
        JsonNullableFloat: {
            present?: boolean;
        };
        JsonNullableLocalDateTime: {
            present?: boolean;
        };
        JsonNullableString: {
            present?: boolean;
        };
        JsonNullableUUID: {
            present?: boolean;
        };
        SubscriptionRequest: {
            /** Format: uuid */
            product_id?: string;
            /** Format: uuid */
            user_id?: string;
            /** Format: float */
            final_value?: number;
            discount?: components["schemas"]["JsonNullableFloat"];
            currency?: string;
            cancellation_reason?: components["schemas"]["JsonNullableString"];
            auto_renew?: boolean;
            status?: string;
            external_order_id?: components["schemas"]["JsonNullableUUID"];
            metadata?: components["schemas"]["JsonNullableString"];
            /** Format: date-time */
            started_at?: string;
            expires_at?: components["schemas"]["JsonNullableLocalDateTime"];
            canceled_at?: components["schemas"]["JsonNullableLocalDateTime"];
        };
        ProductFormatResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            display_name?: string;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        ProductResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            external_id?: string;
            business_unit?: string;
            banner_url?: string;
            logo_url?: string;
            active?: boolean;
            product_format?: components["schemas"]["ProductFormatResponse"];
            redirect_url?: string;
            is_new?: boolean;
            most_sold?: boolean;
            /** Format: int32 */
            duration_in_days?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            deleted_at?: string;
        };
        SubscriptionResponse: {
            /** Format: uuid */
            id?: string;
            product?: components["schemas"]["ProductResponse"];
            user?: components["schemas"]["UserResponse"];
            /** Format: float */
            final_value?: number;
            /** Format: float */
            discount?: number;
            currency?: string;
            cancellation_reason?: string;
            auto_renew?: boolean;
            status?: string;
            /** Format: uuid */
            external_order_id?: string;
            metadata?: string;
            /** Format: date-time */
            started_at?: string;
            /** Format: date-time */
            expires_at?: string;
            /** Format: date-time */
            canceled_at?: string;
        };
        VerifyLoginEmailRequest: {
            username?: string;
            /** Format: uuid */
            user_access_id?: string;
            /** Format: uuid */
            initial_verification_code_id?: string;
            email?: string;
        };
        TokenResponse: {
            access_token?: string;
            id_token?: string;
            refresh_token?: string;
            /** Format: int32 */
            expires_in?: number;
        };
        VerifyLoginEmailResponse: {
            next_step?: string;
            tokens?: components["schemas"]["TokenResponse"];
        };
        ValidateRegistrationCompletionOtpRequest: {
            /** Format: uuid */
            verification_code_id?: string;
            username?: string;
            /** Format: uuid */
            initial_verification_code_id?: string;
            /** Format: uuid */
            identifier_id?: string;
            identifier_type?: string;
            verification_code?: string;
        };
        ValidateRegistrationCompletionOtpResponse: {
            next_step?: string;
            tokens?: components["schemas"]["TokenResponse"];
            username?: string;
        };
        ValidateInitialOtpRequest: {
            username?: string;
            /** Format: uuid */
            verification_code_id?: string;
            verification_code?: string;
        };
        EmailResponse: {
            /** Format: uuid */
            id?: string;
            email?: string;
            name?: string;
        };
        ValidateInitialOtpResponse: {
            next_step?: string;
            username?: string;
            tokens?: components["schemas"]["TokenResponse"];
            access?: components["schemas"]["EmailResponse"][];
        };
        PasswordStartRequest: {
            email: string;
            base_url: string;
            redirect_url: string;
        };
        PasswordStartResponse: {
            /** Format: uuid */
            password_id?: string;
            next_at?: string;
            next_step?: string;
        };
        PasswordRegisterRequest: {
            /** Format: uuid */
            password_id: string;
            password_secret: string;
            password: string;
            confirmation_password: string;
        };
        PasswordRegisterResponse: {
            tokens?: components["schemas"]["TokenResponse"];
            next_step?: string;
        };
        PasswordRecoveryRequest: {
            email: string;
            base_url: string;
            redirect_url: string;
        };
        PasswordRecoveryResponse: {
            /** Format: uuid */
            password_id?: string;
            next_at?: string;
            next_step?: string;
        };
        PasswordRecoveryValidateRequest: {
            /** Format: uuid */
            password_id: string;
            password_secret: string;
            password: string;
            confirmation_password: string;
        };
        PasswordRecoveryValidateResponse: {
            tokens?: components["schemas"]["TokenResponse"];
            next_step?: string;
        };
        PasswordLoginRequest: {
            email: string;
            password: string;
        };
        PasswordLoginResponse: {
            tokens?: components["schemas"]["TokenResponse"];
            next_at?: string;
            next_step?: string;
        };
        InitializeAuthRequest: {
            username?: string;
        };
        InitializeAuthResponse: {
            /** Format: uuid */
            verification_code_id?: string;
            next_step?: string;
            next_verification_at?: string;
        };
        CompleteRegistrationRequest: {
            username?: string;
            phone?: string;
            email?: string;
            name?: string;
            /** Format: uuid */
            initial_verification_code_id?: string;
            subscribe_to_newsletter?: boolean;
        };
        CompleteRegistrationResponse: {
            /** Format: uuid */
            verification_code_id?: string;
            /** Format: uuid */
            identifier_id?: string;
            identifier_type?: string;
            /** Format: uuid */
            initial_verification_code_id?: string;
            next_verification_at?: string;
            next_step?: string;
        };
        SocialMediaRequest: {
            url: string;
            type?: string;
            /** Format: uuid */
            user_id: string;
        };
        SocialMediaResponse: {
            /** Format: uuid */
            id?: string;
            url?: string;
            type?: string;
            user?: components["schemas"]["UserResponse"];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        SegmentRequest: {
            name?: string;
        };
        SegmentResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        RoleRequest: {
            name?: string;
            description?: string;
        };
        RoleClaimRequest: {
            authorize?: boolean;
        };
        ClaimResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            resource?: components["schemas"]["ResourceResponse"];
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        ResourceResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        RoleClaimResponse: {
            role?: components["schemas"]["RoleResponse"];
            claim?: components["schemas"]["ClaimResponse"];
            authorize?: boolean;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        ResourceRequest: {
            name?: string;
            description?: string;
        };
        RefreshTokenRequest: {
            /** Format: uuid */
            accounts_user_id?: string;
            refresh_token?: string;
        };
        RefreshTokenResponse: {
            access_token?: string;
            id_token?: string;
        };
        ProductRequest: {
            name?: string;
            description?: components["schemas"]["JsonNullableString"];
            business_unit?: components["schemas"]["JsonNullableString"];
            external_id?: components["schemas"]["JsonNullableString"];
            logo_url?: components["schemas"]["JsonNullableString"];
            banner_url?: components["schemas"]["JsonNullableString"];
            active?: boolean;
            /** Format: uuid */
            format_id?: string;
            redirect_url?: string;
            is_new?: boolean;
            most_sold?: boolean;
            deleted_at?: components["schemas"]["JsonNullableLocalDateTime"];
            /** Format: int32 */
            duration_in_days?: number;
        };
        ProductUserRequest: {
            enabled?: boolean;
        };
        ProductUserResponse: {
            product?: components["schemas"]["ProductResponse"];
            user?: components["schemas"]["UserResponse"];
            enabled?: boolean;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        ProductRoleRequest: {
            description?: string;
            name?: string;
            /** Format: uuid */
            product_id?: string;
        };
        ProductRoleResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
            product?: components["schemas"]["ProductResponse"];
        };
        ProductClassRequest: {
            description?: string;
            name?: string;
            /** Format: int32 */
            maximum_users?: number;
            /** Format: uuid */
            product_id?: string;
            /** Format: date-time */
            start_at?: string;
            /** Format: date-time */
            end_at?: string;
            status?: string;
            /** Format: date-time */
            deleted_at?: string;
        };
        ProductClassResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            /** Format: int32 */
            maximum_users?: number;
            /** Format: int32 */
            count_users?: number;
            /** Format: date-time */
            start_at?: string;
            /** Format: date-time */
            end_at?: string;
            status?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
            product?: components["schemas"]["ProductResponse"];
        };
        ProductClassUserResponse: {
            product_class?: components["schemas"]["ProductClassResponse"];
            user?: components["schemas"]["UserResponse"];
            /** Format: date-time */
            created_at?: string;
        };
        ProductFormatRequest: {
            name?: string;
            display_name?: string;
        };
        PersonRequest: {
            name?: string;
            phone?: string;
            /** Format: date-time */
            deleted_at?: string;
        };
        OrganizationRequest: {
            document?: string;
            name?: string;
            email?: string;
            phone?: string;
            /** Format: uuid */
            status_id?: string;
            enabled?: boolean;
            /** Format: date-time */
            deleted_at?: string;
        };
        OrganizationResponse: {
            /** Format: uuid */
            id?: string;
            document?: string;
            name?: string;
            email?: string;
            phone?: string;
            status?: components["schemas"]["OrganizationStatusResponse"];
            picture?: string;
            enabled?: boolean;
            /** Format: date-time */
            deleted_at?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        OrganizationStatusResponse: {
            /** Format: uuid */
            id?: string;
            name?: string;
            display_name?: string;
            /** Format: date-time */
            deleted_at?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        OrganizationUserRequest: {
            enabled?: boolean;
            /** Format: uuid */
            status_id?: string;
            role?: string;
        };
        OrganizationUserResponse: {
            organization?: components["schemas"]["OrganizationResponse"];
            user?: components["schemas"]["UserResponse"];
            status?: components["schemas"]["UserStatusResponse"];
            role?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        OrganizationSegmentResponse: {
            segment?: components["schemas"]["SegmentResponse"];
            organization?: components["schemas"]["OrganizationResponse"];
            /** Format: date-time */
            created_at?: string;
        };
        OrganizationStatusRequest: {
            name?: string;
            display_name?: string;
            /** Format: date-time */
            deleted_at?: string;
        };
        JobParam: {
            name?: string;
            value?: string;
        };
        LaunchingResponse: {
            job_name?: string;
            message?: string;
            params?: components["schemas"]["JobParam"][];
        };
        StoppingResponse: {
            /** Format: int64 */
            execution_id?: number;
            message?: string;
        };
        JobTitleRequest: {
            name?: string;
        };
        ValidateMagicSessionRequest: {
            /** Format: uuid */
            session_id: string;
            session_secret: string;
        };
        ValidateMagicSessionResponse: {
            next_step?: string;
            redirect_url?: string;
            tokens?: components["schemas"]["TokenResponse"];
        };
        CreateMagicSessionRequest: {
            accounts_user_email: string;
            /** Format: uuid */
            accounts_user_id: string;
            redirect_url: string;
            /** Format: date-time */
            expires_at?: string;
        };
        CreateMagicSessionResponse: {
            /** Format: uuid */
            session_id?: string;
            session_secret?: string;
            redirect_url?: string;
            /** Format: date-time */
            expires_at?: string;
        };
        ClaimRequest: {
            name?: string;
            description?: string;
            /** Format: uuid */
            resource_id?: string;
        };
        ApiKeyRequest: {
            origin_system?: string;
            destination_system?: string;
            description?: string;
            /** Format: date-time */
            expires_at?: string;
        };
        ApiKeyResponse: {
            /** Format: uuid */
            id?: string;
            api_key?: string;
            origin_system?: string;
            destination_system?: string;
            description?: string;
            /** Format: date-time */
            expires_at?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        ApiKeyRoleResponse: {
            role?: components["schemas"]["RoleResponse"];
            api_key?: components["schemas"]["ApiKeyResponse"];
            /** Format: date-time */
            created_at?: string;
        };
        PersonifyRequest: {
            email: string;
        };
        PersonifyResponse: {
            tokens?: components["schemas"]["TokenResponse"];
            personifiedBy?: string;
            personifiedUser?: string;
        };
        AddressRequest: {
            street?: string;
            number?: string;
            neighborhood?: string;
            state?: string;
            complement?: string;
            city?: string;
            cep?: string;
            uf?: string;
            country?: string;
            /** Format: uuid */
            user_id: string;
        };
        AddressResponse: {
            /** Format: uuid */
            id?: string;
            street?: string;
            number?: string;
            neighborhood?: string;
            complement?: string;
            state?: string;
            city?: string;
            cep?: string;
            uf?: string;
            country?: string;
            user?: components["schemas"]["UserResponse"];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        PaginateLink: {
            href?: string;
        };
        PaginateLinks: {
            self?: components["schemas"]["PaginateLink"];
            first?: components["schemas"]["PaginateLink"];
            last?: components["schemas"]["PaginateLink"];
            next?: components["schemas"]["PaginateLink"];
            prev?: components["schemas"]["PaginateLink"];
        };
        PaginatePageVerificationCode: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateVerificationCodeVerificationCodeResponse: {
            page?: components["schemas"]["PaginatePageVerificationCode"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["VerificationCodeResponse"][];
        };
        VerificationCodeResponse: {
            /** Format: uuid */
            id?: string;
            type?: string;
            event?: string;
            phone?: string;
            email?: string;
            otp?: string;
            message?: string;
            subject?: string;
            sent_metadata?: string;
            /** Format: date-time */
            next_verification_at?: string;
            /** Format: date-time */
            sent_at?: string;
            /** Format: int32 */
            number_of_attempts?: number;
            /** Format: date-time */
            verified_at?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        PaginatePageUser: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateUserUserResponse: {
            page?: components["schemas"]["PaginatePageUser"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["UserResponse"][];
        };
        PaginatePageRole: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateRoleRoleResponse: {
            page?: components["schemas"]["PaginatePageRole"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["RoleResponse"][];
        };
        PaginatePageProduct: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateProductProductResponse: {
            page?: components["schemas"]["PaginatePageProduct"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["ProductResponse"][];
        };
        PaginatePageProductClass: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateProductClassProductClassResponse: {
            page?: components["schemas"]["PaginatePageProductClass"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["ProductClassResponse"][];
        };
        PaginateOrganizationOrganizationResponse: {
            page?: components["schemas"]["PaginatePageOrganization"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["OrganizationResponse"][];
        };
        PaginatePageOrganization: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginatePageUserStatus: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateUserStatusUserStatusResponse: {
            page?: components["schemas"]["PaginatePageUserStatus"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["UserStatusResponse"][];
        };
        PaginatePageUserPassword: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateUserPasswordUserPasswordResponse: {
            page?: components["schemas"]["PaginatePageUserPassword"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["UserPasswordResponse"][];
        };
        PaginatePageUserPasswordMail: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateUserPasswordMailUserPasswordMailResponse: {
            page?: components["schemas"]["PaginatePageUserPasswordMail"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["UserPasswordMailResponse"][];
        };
        UserPasswordMailResponse: {
            /** Format: uuid */
            id?: string;
            user?: components["schemas"]["UserResponse"];
            email?: string;
            secret?: string;
            /** @enum {string} */
            type?: "CREATE" | "RECOVERY";
            message?: string;
            subject?: string;
            sent_metadata?: string;
            /** Format: date-time */
            sent_at?: string;
            /** Format: date-time */
            next_at?: string;
            /** Format: date-time */
            verified_at?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        PaginatePageSocialMedia: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateSocialMediaSocialMediaResponse: {
            page?: components["schemas"]["PaginatePageSocialMedia"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["SocialMediaResponse"][];
        };
        PaginatePageSegment: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateSegmentSegmentResponse: {
            page?: components["schemas"]["PaginatePageSegment"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["SegmentResponse"][];
        };
        PaginateClaimClaimResponse: {
            page?: components["schemas"]["PaginatePageClaim"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["ClaimResponse"][];
        };
        PaginatePageClaim: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateApiKeyApiKeyResponse: {
            page?: components["schemas"]["PaginatePageApiKey"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["ApiKeyResponse"][];
        };
        PaginatePageApiKey: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginatePageResource: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateResourceResourceResponse: {
            page?: components["schemas"]["PaginatePageResource"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["ResourceResponse"][];
        };
        PaginatePageProductRole: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateProductRoleProductRoleResponse: {
            page?: components["schemas"]["PaginatePageProductRole"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["ProductRoleResponse"][];
        };
        PaginatePageProductFormat: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateProductFormatProductFormatResponse: {
            page?: components["schemas"]["PaginatePageProductFormat"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["ProductFormatResponse"][];
        };
        PaginatePagePerson: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginatePersonPersonResponse: {
            page?: components["schemas"]["PaginatePagePerson"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["PersonResponse"][];
        };
        PaginateOrganizationStatusOrganizationStatusResponse: {
            page?: components["schemas"]["PaginatePageOrganizationStatus"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["OrganizationStatusResponse"][];
        };
        PaginatePageOrganizationStatus: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        LoginMetricResponse: {
            /** Format: uuid */
            id?: string;
            /** Format: date-time */
            period_start?: string;
            /** Format: date-time */
            period_end?: string;
            /** Format: int32 */
            total_logins?: number;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        PaginateLoginMetricLoginMetricResponse: {
            page?: components["schemas"]["PaginatePageLoginMetric"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["LoginMetricResponse"][];
        };
        PaginatePageLoginMetric: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        MagicSessionResponse: {
            /** Format: uuid */
            id?: string;
            user?: components["schemas"]["UserResponse"];
            secret?: string;
            redirect_url?: string;
            /** Format: date-time */
            used_at?: string;
            /** Format: int32 */
            number_of_attempts?: number;
            /** Format: date-time */
            expires_at?: string;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        PaginateMagicSessionMagicSessionResponse: {
            page?: components["schemas"]["PaginatePageMagicSession"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["MagicSessionResponse"][];
        };
        PaginatePageMagicSession: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        LoginAttemptResponse: {
            /** Format: uuid */
            id?: string;
            user?: components["schemas"]["UserResponse"];
            successfully?: boolean;
            /** Format: date-time */
            next_at?: string;
            /** Format: date-time */
            created_at?: string;
        };
        PaginateLoginAttemptLoginAttemptResponse: {
            page?: components["schemas"]["PaginatePageLoginAttempt"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["LoginAttemptResponse"][];
        };
        PaginatePageLoginAttempt: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        Job: {
            restartable?: boolean;
            jobParametersIncrementer?: components["schemas"]["JobParametersIncrementer"];
            jobParametersValidator?: components["schemas"]["JobParametersValidator"];
            name?: string;
        };
        JobParametersIncrementer: Record<string, never>;
        JobParametersValidator: Record<string, never>;
        PaginateJobTitleJobTitleResponse: {
            page?: components["schemas"]["PaginatePageJobTitle"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["JobTitleResponse"][];
        };
        PaginatePageJobTitle: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        EntityFilter: {
            description?: string;
            filter?: string;
        };
        EntityFilters: {
            column?: string;
            filters?: components["schemas"]["EntityFilter"][];
        };
        PaginateApiKeyRoleApiKeyRoleResponse: {
            page?: components["schemas"]["PaginatePageApiKeyRole"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["ApiKeyRoleResponse"][];
        };
        PaginatePageApiKeyRole: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        PaginateAddressAddressResponse: {
            page?: components["schemas"]["PaginatePageAddress"];
            links?: components["schemas"]["PaginateLinks"];
            content?: components["schemas"]["AddressResponse"][];
        };
        PaginatePageAddress: {
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            size?: number;
            /** Format: int32 */
            total_pages?: number;
            /** Format: int64 */
            total_elements?: number;
        };
        Link: {
            href?: string;
            templated?: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    updateProductLogoImage: {
        parameters: {
            query: {
                file: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FileImageResponse"];
                };
            };
        };
    };
    deleteProductLogoImage: {
        parameters: {
            query: {
                file: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FileImageResponse"];
                };
            };
        };
    };
    updateProductBannerImage: {
        parameters: {
            query: {
                file: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FileImageResponse"];
                };
            };
        };
    };
    deleteProductBannerImage: {
        parameters: {
            query: {
                file: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FileImageResponse"];
                };
            };
        };
    };
    updateUserImage: {
        parameters: {
            query: {
                file: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FileImageResponse"];
                };
            };
        };
    };
    deleteUserImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateOrganizationImage: {
        parameters: {
            query: {
                file: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FileImageResponse"];
                };
            };
        };
    };
    deleteOrganizationImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    validateToken: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ValidateTokenResponse"];
                };
            };
        };
    };
    findAll: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateUserUserResponse"];
                };
            };
        };
    };
    save: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserResponse"];
                };
            };
        };
    };
    findByUserIdAndRoleId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                userId: string;
                roleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserRoleResponse"];
                };
            };
        };
    };
    addRoleToUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                userId: string;
                roleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserRoleResponse"];
                };
            };
        };
    };
    deleteByUserIdAndRoleId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                userId: string;
                roleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    save_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                userId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserPasswordRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserPasswordResponse"];
                };
            };
        };
    };
    findAll_1: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateUserStatusUserStatusResponse"];
                };
            };
        };
    };
    save_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserStatusRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserStatusResponse"];
                };
            };
        };
    };
    save_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SubscriptionRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SubscriptionResponse"];
                };
            };
        };
    };
    verifyLoginEmail: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["VerifyLoginEmailRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["VerifyLoginEmailResponse"];
                };
            };
        };
    };
    validateRegistrationCompletionOtp: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ValidateRegistrationCompletionOtpRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ValidateRegistrationCompletionOtpResponse"];
                };
            };
        };
    };
    validateInitialOtp: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ValidateInitialOtpRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ValidateInitialOtpResponse"];
                };
            };
        };
    };
    passwordStart: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PasswordStartRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PasswordStartResponse"];
                };
            };
        };
    };
    passwordRegister: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PasswordRegisterRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PasswordRegisterResponse"];
                };
            };
        };
    };
    passwordRecovery: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PasswordRecoveryRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PasswordRecoveryResponse"];
                };
            };
        };
    };
    passwordRecoveryValidate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PasswordRecoveryValidateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PasswordRecoveryValidateResponse"];
                };
            };
        };
    };
    passwordLogin: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PasswordLoginRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PasswordLoginResponse"];
                };
            };
        };
    };
    initializeAuth: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InitializeAuthRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["InitializeAuthResponse"];
                };
            };
        };
    };
    completeRegistration: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompleteRegistrationRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CompleteRegistrationResponse"];
                };
            };
        };
    };
    findAll_2: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateSocialMediaSocialMediaResponse"];
                };
            };
        };
    };
    save_4: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SocialMediaRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SocialMediaResponse"];
                };
            };
        };
    };
    findAll_3: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateSegmentSegmentResponse"];
                };
            };
        };
    };
    save_5: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SegmentRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SegmentResponse"];
                };
            };
        };
    };
    findAll_4: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateRoleRoleResponse"];
                };
            };
        };
    };
    save_6: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RoleResponse"];
                };
            };
        };
    };
    findByRoleIdAndClaimId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roleId: string;
                claimId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RoleClaimResponse"];
                };
            };
        };
    };
    addClaimToRole: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roleId: string;
                claimId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleClaimRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RoleClaimResponse"];
                };
            };
        };
    };
    deleteByUserIdAndRoleId_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roleId: string;
                claimId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdateClaimOfRole: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roleId: string;
                claimId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleClaimRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findAll_5: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateResourceResourceResponse"];
                };
            };
        };
    };
    save_7: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResourceRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResourceResponse"];
                };
            };
        };
    };
    refreshToken: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RefreshTokenRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RefreshTokenResponse"];
                };
            };
        };
    };
    findAll_6: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateProductProductResponse"];
                };
            };
        };
    };
    save_8: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductResponse"];
                };
            };
        };
    };
    findByProductIdAndUserId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductUserResponse"];
                };
            };
        };
    };
    saveUsersByProductId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductUserRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductUserResponse"];
                };
            };
        };
    };
    deleteByProductIdAndUserId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdateByProductIdAndUserId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductUserRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findAll_7: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateProductRoleProductRoleResponse"];
                };
            };
        };
    };
    save_9: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductRoleRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductRoleResponse"];
                };
            };
        };
    };
    findAll_8: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateProductClassProductClassResponse"];
                };
            };
        };
    };
    save_10: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductClassRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductClassResponse"];
                };
            };
        };
    };
    findByProductIdAndUserId_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productClassId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductClassUserResponse"];
                };
            };
        };
    };
    addUserToProductClass: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productClassId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductClassUserResponse"];
                };
            };
        };
    };
    deleteByProductIdAndUserId_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productClassId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findAll_9: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateProductFormatProductFormatResponse"];
                };
            };
        };
    };
    save_11: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductFormatRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductFormatResponse"];
                };
            };
        };
    };
    findAll_10: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginatePersonPersonResponse"];
                };
            };
        };
    };
    save_12: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PersonRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PersonResponse"];
                };
            };
        };
    };
    findAll_11: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateOrganizationOrganizationResponse"];
                };
            };
        };
    };
    save_13: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OrganizationResponse"];
                };
            };
        };
    };
    findByOrganizationIdAndUserId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organizationId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OrganizationUserResponse"];
                };
            };
        };
    };
    saveUsersByOrganizationId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organizationId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationUserRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OrganizationUserResponse"];
                };
            };
        };
    };
    deleteByOrganizationIdAndUserId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organizationId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": Record<string, never>;
                };
            };
        };
    };
    partialUpdateByOrganizationIdAndUserId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organizationId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationUserRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findByOrganizationIdAndSegmentId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organizationId: string;
                segmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OrganizationSegmentResponse"];
                };
            };
        };
    };
    addSegmentToOrganization: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organizationId: string;
                segmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OrganizationSegmentResponse"];
                };
            };
        };
    };
    deleteByOrganizationIdAndSegmentId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organizationId: string;
                segmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OrganizationSegmentResponse"];
                };
            };
        };
    };
    findAll_12: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateOrganizationStatusOrganizationStatusResponse"];
                };
            };
        };
    };
    save_14: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationStatusRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OrganizationStatusResponse"];
                };
            };
        };
    };
    launchJob: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                jobName: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["JobParam"][];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LaunchingResponse"];
                };
            };
        };
    };
    stopJob: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                executionId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["StoppingResponse"];
                };
            };
        };
    };
    findAll_13: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateJobTitleJobTitleResponse"];
                };
            };
        };
    };
    save_15: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["JobTitleRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["JobTitleResponse"];
                };
            };
        };
    };
    validateMagicSession: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ValidateMagicSessionRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ValidateMagicSessionResponse"];
                };
            };
        };
    };
    createMagicSession: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateMagicSessionRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CreateMagicSessionResponse"];
                };
            };
        };
    };
    findAll_14: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateClaimClaimResponse"];
                };
            };
        };
    };
    save_16: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ClaimRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClaimResponse"];
                };
            };
        };
    };
    findAll_15: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateApiKeyApiKeyResponse"];
                };
            };
        };
    };
    save_17: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ApiKeyRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiKeyResponse"];
                };
            };
        };
    };
    regenerateApiKey: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiKeyResponse"];
                };
            };
        };
    };
    findByApiKeyIdAndRoleId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                apiKeyId: string;
                roleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiKeyRoleResponse"];
                };
            };
        };
    };
    addRoleToApiKey: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                apiKeyId: string;
                roleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiKeyRoleResponse"];
                };
            };
        };
    };
    deleteByApiKeyIdAndRoleId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                apiKeyId: string;
                roleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    personify: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PersonifyRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PersonifyResponse"];
                };
            };
        };
    };
    findAll_16: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateAddressAddressResponse"];
                };
            };
        };
    };
    save_18: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddressRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["AddressResponse"];
                };
            };
        };
    };
    findById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserResponse"];
                };
            };
        };
    };
    partialUpdate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserStatusResponse"];
                };
            };
        };
    };
    delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserStatusRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SubscriptionResponse"];
                };
            };
        };
    };
    partialUpdate_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SubscriptionRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SocialMediaResponse"];
                };
            };
        };
    };
    delete_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SocialMediaRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_4: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SegmentResponse"];
                };
            };
        };
    };
    delete_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_4: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SegmentRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_5: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RoleResponse"];
                };
            };
        };
    };
    delete_3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_5: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_6: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResourceResponse"];
                };
            };
        };
    };
    delete_4: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_6: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResourceRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_7: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductResponse"];
                };
            };
        };
    };
    delete_5: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_7: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_8: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductRoleResponse"];
                };
            };
        };
    };
    delete_6: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_8: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductRoleRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_9: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductClassResponse"];
                };
            };
        };
    };
    delete_7: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_9: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductClassRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_10: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProductFormatResponse"];
                };
            };
        };
    };
    delete_8: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_10: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductFormatRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_11: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PersonResponse"];
                };
            };
        };
    };
    delete_9: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": Record<string, never>;
                };
            };
        };
    };
    partialUpdate_11: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PersonRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_12: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OrganizationResponse"];
                };
            };
        };
    };
    delete_10: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_12: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_13: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OrganizationStatusResponse"];
                };
            };
        };
    };
    delete_11: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_13: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationStatusRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_14: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["JobTitleResponse"];
                };
            };
        };
    };
    delete_12: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_14: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["JobTitleRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_15: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClaimResponse"];
                };
            };
        };
    };
    delete_13: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_15: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ClaimRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_16: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiKeyResponse"];
                };
            };
        };
    };
    delete_14: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_16: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ApiKeyRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findById_17: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["AddressResponse"];
                };
            };
        };
    };
    delete_15: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    partialUpdate_17: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddressRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findAll_17: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateVerificationCodeVerificationCodeResponse"];
                };
            };
        };
    };
    findById_18: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["VerificationCodeResponse"];
                };
            };
        };
    };
    findRolesByUserId: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateRoleRoleResponse"];
                };
            };
        };
    };
    findAll_18: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateProductProductResponse"];
                };
            };
        };
    };
    findAll_19: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateProductClassProductClassResponse"];
                };
            };
        };
    };
    findAll_20: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateOrganizationOrganizationResponse"];
                };
            };
        };
    };
    findAll_21: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateUserPasswordUserPasswordResponse"];
                };
            };
        };
    };
    findById_19: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserPasswordResponse"];
                };
            };
        };
    };
    findAll_22: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateUserPasswordMailUserPasswordMailResponse"];
                };
            };
        };
    };
    findById_20: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserPasswordMailResponse"];
                };
            };
        };
    };
    findByProductId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SubscriptionResponse"][];
                };
            };
        };
    };
    findByUserId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                personId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SubscriptionResponse"][];
                };
            };
        };
    };
    findOrganizationsBySegmentId: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateOrganizationOrganizationResponse"];
                };
            };
        };
    };
    findUsersByRoleId: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateUserUserResponse"];
                };
            };
        };
    };
    findClaimsByRoleId: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateClaimClaimResponse"];
                };
            };
        };
    };
    findApiKeysByRoleId: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateApiKeyApiKeyResponse"];
                };
            };
        };
    };
    findUsersByProductId: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateUserUserResponse"];
                };
            };
        };
    };
    findUsersByProductClassId: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateUserUserResponse"];
                };
            };
        };
    };
    findAll_23: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateUserUserResponse"];
                };
            };
        };
    };
    findUsersByOrganizationId: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateUserUserResponse"];
                };
            };
        };
    };
    findSegmentsByOrganizationId: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateSegmentSegmentResponse"];
                };
            };
        };
    };
    findAllSuccessfulLoginMetrics: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateLoginMetricLoginMetricResponse"];
                };
            };
        };
    };
    findAll_24: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateMagicSessionMagicSessionResponse"];
                };
            };
        };
    };
    findById_21: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["MagicSessionResponse"];
                };
            };
        };
    };
    findAll_25: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateLoginAttemptLoginAttemptResponse"];
                };
            };
        };
    };
    findById_22: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LoginAttemptResponse"];
                };
            };
        };
    };
    getJobs: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Job"][];
                };
            };
        };
    };
    findAllEntities: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string[];
                };
            };
        };
    };
    findByEntity: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                entity: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["EntityFilters"][];
                };
            };
        };
    };
    findRolesByClaimId: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateRoleRoleResponse"];
                };
            };
        };
    };
    findRolesByApiKeyId: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateRoleRoleResponse"];
                };
            };
        };
    };
    findAll_26: {
        parameters: {
            query?: {
                page?: number;
                size?: number;
                params?: {
                    [key: string]: string;
                };
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaginateApiKeyRoleApiKeyRoleResponse"];
                };
            };
        };
    };
    links: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.spring-boot.actuator.v3+json": {
                        [key: string]: {
                            [key: string]: components["schemas"]["Link"];
                        };
                    };
                    "application/vnd.spring-boot.actuator.v2+json": {
                        [key: string]: {
                            [key: string]: components["schemas"]["Link"];
                        };
                    };
                    "application/json": {
                        [key: string]: {
                            [key: string]: components["schemas"]["Link"];
                        };
                    };
                };
            };
        };
    };
    listNames: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
                    "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    metric: {
        parameters: {
            query?: {
                tag?: string;
            };
            header?: never;
            path: {
                requiredMetricName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
                    "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
                    "application/json": Record<string, never>;
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    info: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
                    "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    health: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
                    "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    caches: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
                    "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    clearCaches: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    cache: {
        parameters: {
            query?: {
                cacheManager?: string;
            };
            header?: never;
            path: {
                cache: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
                    "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
                    "application/json": Record<string, never>;
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    clearCache: {
        parameters: {
            query?: {
                cacheManager?: string;
            };
            header?: never;
            path: {
                cache: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
